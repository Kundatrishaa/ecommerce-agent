{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhanu\\\\OneDrive\\\\Desktop\\\\agent\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleAsk = async () => {\n    if (!question.trim()) return;\n    setLoading(true);\n    setResponse(null);\n    try {\n      const res = await fetch(\"http://localhost:3000/query\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        })\n      });\n      const data = await res.json();\n      setResponse(data);\n    } catch (err) {\n      setResponse({\n        error: \"Network error. Please try again.\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDDE0 Ask SQL with Gemini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter your question...\",\n      value: question,\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAsk,\n      disabled: loading,\n      children: loading ? \"Thinking...\" : \"Ask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: response.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: [\"\\u274C \", response.detail || response.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Generated SQL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: response.sql\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(response.data, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"09mb9G3k8mFB3lLewqvkckOYQC8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","question","setQuestion","response","setResponse","loading","setLoading","handleAsk","trim","res","fetch","method","headers","body","JSON","stringify","data","json","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","disabled","detail","sql","_c","$RefreshReg$"],"sources":["C:/Users/dhanu/OneDrive/Desktop/agent/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [question, setQuestion] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleAsk = async () => {\n    if (!question.trim()) return;\n    setLoading(true);\n    setResponse(null);\n    try {\n      const res = await fetch(\"http://localhost:3000/query\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question }),\n      });\n      const data = await res.json();\n      setResponse(data);\n    } catch (err) {\n      setResponse({ error: \"Network error. Please try again.\" });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>üß† Ask SQL with Gemini</h1>\n      <textarea\n        placeholder=\"Enter your question...\"\n        value={question}\n        onChange={(e) => setQuestion(e.target.value)}\n      />\n      <button onClick={handleAsk} disabled={loading}>\n        {loading ? \"Thinking...\" : \"Ask\"}\n      </button>\n\n      {response && (\n        <div className=\"response\">\n          {response.error ? (\n            <p className=\"error\">‚ùå {response.detail || response.error}</p>\n          ) : (\n            <>\n              <h3>Generated SQL:</h3>\n              <pre>{response.sql}</pre>\n              <h3>Result:</h3>\n              <pre>{JSON.stringify(response.data, null, 2)}</pre>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}